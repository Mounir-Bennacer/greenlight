version: "3.9"

# ********************************
# NETWORKS                       *
# ********************************
networks:
  default:
    name: greenlight-network

# ********************************
# VOLUMES                        *
# ********************************
volumes:
  data_volume:
  pgadmin:

services:
  # ********************************
  # API                            *
  # ********************************
  api:
    build: .
    container_name: api
    ports:
      - "8000:8000"
    volumes:
      - .:/usr/src/app
    command: air ./cmd/api/main.go -b 0.0.0.0
    depends_on:
      - postgres

  # ********************************
  # POSTGRES                       *
  # ********************************
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${DB_USER:-admin}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
      - POSTGRES_DB=${DB_NAME:-greenlight}
      - PGUSER=${DB_USER:-mounir}
    ports:
      - "5432:5432"
    healthcheck:
      test:
        [
          "CMD",
          "psql",
          "-h",
          "localhost",
          "-U",
          "${DB_USER:-admin}",
          "-c",
          "select 1",
          "postgres",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - data_volume:/var/lib/postgresql/data
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - default

  # ********************************
  # PGADMIN_DEV                    *
  # ********************************
  pgadmin_dev:
    container_name: pgadmin_dev
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - default
    restart: unless-stopped
    depends_on:
      - postgres

  # ********************************
  # INTEGRATION TESTS              *
  # ********************************
  # integration:
  #   build:
  #     context: .
  #     dockerfile: integration-test/Dockerfile
  #   container_name: integration
  #   image: integration
  #   depends_on:
  #     - api

  # ********************************
  # REDIS                          *
  # ********************************
  # redis:
  #   image: redis:7-alpine
